# api/app_new.py
import uvicorn
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from api.config import setup_logging, check_system_resources, optimize_memory, CORS_ORIGINS
from api.database import db_manager
from api.routes import router

# ‚úÖ Setup logging
logger = setup_logging()
logger.info("üöÄ Starting Medical Chatbot API...")

# ‚úÖ Monitor system resources
check_system_resources(logger)

# ‚úÖ Optimize memory usage
optimize_memory()

# ‚úÖ Initialize FastAPI app
app = FastAPI(
    title="Medical Chatbot API",
    description="AI-powered medical chatbot with RAG and search capabilities",
    version="1.0.0"
)

# ‚úÖ Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=CORS_ORIGINS,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ‚úÖ Initialize database connections
try:
    db_manager.initialize_embedding_model()
    db_manager.initialize_mongodb()
    logger.info("‚úÖ Database connections initialized successfully")
except Exception as e:
    logger.error(f"‚ùå Database initialization failed: {e}")
    raise

# ‚úÖ Include routes
app.include_router(router)

# ‚úÖ Run Uvicorn
if __name__ == "__main__":
    logger.info("[System] ‚úÖ Starting FastAPI Server...")
    try:
        uvicorn.run(app, host="0.0.0.0", port=7860, log_level="info")
    except Exception as e:
        logger.error(f"‚ùå Server Startup Failed: {e}")
        exit(1)
